{"version":3,"sources":["webpack:///./lib/config.js","webpack:///./lib/tab-bar-item/TabBarItem.js","webpack:///./lib/tab-bar-item/index.js","webpack:///./lib/tab-bar/TabBar.js","webpack:///./lib/tab-bar/index.js","webpack:///./lib/tab-bar/tab-bar.mdx"],"names":["__webpack_require__","d","__webpack_exports__","COLORS","react_native_styler__WEBPACK_IMPORTED_MODULE_0__","react_native_component_styler__WEBPACK_IMPORTED_MODULE_1__","primary","secondary","body","action","error","nav","inactive","sheet","navInactiveItem","navActiveItem","SPACING","xs","s","m","l","xl","createTheme","colors","spacing","fontSizes","xxs","xxl","addGlobalContainerVariants","spaceXS","marginBottom","concat","spaceS","spaceM","spaceL","spaceXL","ICON_COLOR","ACTIVE_ICON_COLOR","TabBarItem","props","iconSize","Math","round","StyleSheet","flatten","height","react_default","a","createElement","TouchableOpacity","onPress","style","View","React","cloneElement","icon","width","color","active","createStyledComponent","TabBarView","TabBar","Fragment","items","map","item","index","tab_bar_item","Object","assign","key","MDXContent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","Component","_this$props","components","_objectWithoutProperties","dist","name","id","react_native_styler","parentName"],"mappings":"yGAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,+CAAAK,EAAAL,EAAA,yDAGMG,EAAS,CACXG,QAAS,UACTC,UAAW,UACXC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,IAAK,UACLC,SAAU,UACVC,MAAO,UACPC,gBAAiB,UACjBC,cAAe,WAEbC,EAAU,CACZC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,EAAG,GACHC,GAAI,IAYRC,YAAY,CACRC,OAAQpB,EACRqB,QAASR,EACTS,UAbe,CACfC,IAAK,OACLT,GAAI,QACJC,EAAG,QACHC,EAAG,QACHC,EAAG,QACHC,GAAI,QACJM,IAAK,WASTC,YAA2B,CACvBC,QAAS,CAAEC,aAAY,GAAAC,OAAKf,EAAQC,GAAb,QACvBe,OAAQ,CAAEF,aAAY,GAAAC,OAAKf,EAAQE,EAAb,QACtBe,OAAQ,CAAEH,aAAY,GAAAC,OAAKf,EAAQG,EAAb,QACtBe,OAAQ,CAAEJ,aAAY,GAAAC,OAAKf,EAAQI,EAAb,QACtBe,QAAS,CAAEL,aAAY,GAAAC,OAAKf,EAAQK,GAAb,2uCCtCrBe,EAAajC,IAAOW,gBACpBuB,EAAoBlC,IAAOY,cAOjC,SAASuB,EAAWC,EAAOrB,GACvB,IAAMsB,EAAWC,KAAKC,MAAyD,GAAnDC,IAAWC,QAAQ1B,EAAE,iBAAiB,IAAI2B,QAEtE,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIC,QAASX,EAAMW,QACfC,MAAOjC,EAAE,cAET4B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACID,MAAOjC,EAAE,kBAERmC,IAAMC,aAAaf,EAAMgB,KAAM,CAC5BV,OAAQL,EACRgB,MAAOhB,EACPiB,MAAOlB,EAAMmB,OAASrB,EAAoBD,MAc/CE,oZC/BAA,EANIqB,YACf,CAAC,UAAW,SAAU,WACtBR,EACAS,GCUJ,SAASC,EAAOtB,EAAOrB,GACnB,OACI4B,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAP,KACIhB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACID,MAAOjC,EAAE,iBAEb4B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACID,MAAOjC,EAAE,cAERqB,EAAMwB,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACbpB,EAAAC,EAAAC,cAACmB,EAADC,OAAAC,OAAA,CACIC,IAAKJ,GACDD,QAmBbJ,meC5CAF,YACX,CAAC,WACDR,EACAS,4sCCKiBW,cACnB,SAAAA,EAAYhC,GAAO,IAAAiC,EAAA,mGAAAC,CAAAC,KAAAH,IACjBC,EAAAG,EAAAD,KAAAE,EAAAL,GAAAM,KAAAH,KAAMnC,KACDuC,OAAS,KAFGN,yPADmBnB,IAAM0B,kDAKnC,IAAAC,EAC0BN,KAAKnC,MAA9B0C,EADDD,EACCC,WADDC,EAAAF,EAAA,gBAGP,OAAOlC,EAAAC,EAAAC,cAACmC,EAAA,OAAD,CACEC,KAAK,UAELH,WAAYA,GAAYnC,EAAAC,EAAAC,cAACmC,EAAA,OAAD,CAAQC,KAAK,KAAKH,WAAYA,EAAY1C,MAAO,CAAC8C,GAAK,YAAvD,WAErCvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,KAAgBxC,EAAAC,EAAAC,cAAA,aAChBF,EAAAC,EAAAC,cAACmC,EAAA,OAAD,CAAQC,KAAK,MAAMH,WAAYA,GAAYnC,EAAAC,EAAAC,cAACmC,EAAA,OAAD,CAAQC,KAAK,OAAOH,WAAYA,EAAYM,WAAW,MAAMhD,MAAO,IAApE","file":"static/js/lib-tab-bar-tab-bar.c28577d6.js","sourcesContent":["import { createTheme } from 'react-native-styler';\nimport { addGlobalContainerVariants } from 'react-native-component-styler';\n\nconst COLORS = {\n    primary: '#4e4cc1',\n    secondary: '#953495',\n    body: '#000000',\n    action: '#ffffff',\n    error: '#900505',\n    nav: '#333333',\n    inactive: '#cccccc',\n    sheet: '#fefefe',\n    navInactiveItem: '#cccccc',\n    navActiveItem: '#333333',\n};\nconst SPACING = {\n    xs: 2,\n    s: 4,\n    m: 8,\n    l: 16,\n    xl: 32,\n};\nconst FONT_SIZES = {\n    xxs: '8h4s',\n    xs: '11h4s',\n    s: '13h4s',\n    m: '16h4s',\n    l: '20h4s',\n    xl: '24h4s',\n    xxl: '32h4s'\n};\n\ncreateTheme({\n    colors: COLORS,\n    spacing: SPACING,\n    fontSizes: FONT_SIZES\n});\n\naddGlobalContainerVariants({\n    spaceXS: { marginBottom: `${SPACING.xs}h4s` },\n    spaceS: { marginBottom: `${SPACING.s}h4s` },\n    spaceM: { marginBottom: `${SPACING.m}h4s` },\n    spaceL: { marginBottom: `${SPACING.l}h4s` },\n    spaceXL: { marginBottom: `${SPACING.xl}h4s` },\n});\n\nexport {\n    COLORS,\n    SPACING,\n    FONT_SIZES\n};\n","import React from 'react';\nimport { TouchableOpacity, View, StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { COLORS } from '../config';\n\nconst ICON_COLOR = COLORS.navInactiveItem;\nconst ACTIVE_ICON_COLOR = COLORS.navActiveItem;\n\n/**\n * <TabBarItem />\n * @param {Object} props \n * @param {Function} s\n */\nfunction TabBarItem(props, s) {\n    const iconSize = Math.round(StyleSheet.flatten(s('ItemContainer')[0]).height * 0.4);\n\n    return (\n        <TouchableOpacity\n            onPress={props.onPress}\n            style={s('ItemTouch')}\n        >\n            <View\n                style={s('ItemContainer')}\n            >\n                {React.cloneElement(props.icon, {\n                    height: iconSize,\n                    width: iconSize,\n                    color: props.active ? ACTIVE_ICON_COLOR : ICON_COLOR\n                })}\n            </View>\n        </TouchableOpacity>\n    );\n}\n\nTabBarItem.propTypes = {\n    active: PropTypes.bool,\n    primary: PropTypes.bool,\n    icon: PropTypes.node,\n    onPress: PropTypes.func,\n};\n\nexport default TabBarItem;\n","import { createStyledComponent } from 'react-native-component-styler';\nimport TabBarView from './TabBarItem';\nimport style from './style.json';\n\nconst TabBarItem = createStyledComponent(\n    ['DEFAULT', 'ACTIVE', 'PRIMARY'],\n    style,\n    TabBarView\n);\n\nexport default TabBarItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View } from 'react-native';\nimport TabBarItem from '../tab-bar-item';\n\n/**\n * TabBar\n * \n * ```jsx\n * <TabBar\n *   items={[\n *     { icon: <Component />, onPress: () => {} },\n *     { icon: <Component />, onPress: () => {} }\n *   ]}\n * />\n * ```\n */\nfunction TabBar(props, s) {\n    return (\n        <React.Fragment>\n            <View\n                style={s('Placeholder')}\n            />\n            <View\n                style={s('Container')}\n            >\n                {props.items.map((item, index) => (\n                    <TabBarItem\n                        key={index}\n                        {...item}\n                    />\n                ))}\n            </View>\n        </React.Fragment>\n    );\n}\n\nTabBar.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            icon: PropTypes.node,\n            onPress: PropTypes.func,\n            active: PropTypes.bool,\n            primary: PropTypes.bool\n        })\n    ).isRequired\n};\n\nexport default TabBar;\n","import { createStyledComponent } from 'react-native-component-styler';\nimport TabBarView from './TabBar';\nimport style from './style.json';\n\nconst TabBar = createStyledComponent(\n    ['DEFAULT'],\n    style,\n    TabBarView\n);\n\nexport default TabBar;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { StylerProvider } from 'react-native-styler';\nimport { View } from 'react-native';\nimport '../config';\nimport TabBar from './index';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"tab-bar\"}}>{`Tab Bar`}</MDXTag>\n\n<StylerProvider><div /></StylerProvider>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`const items = TABS.map(tab => ({\n    icon: tab.icon,\n    onPress: () => props.onTabPress(tab.to),\n    isActive: props.active === tab.to\n}));\n\n<TabBar items={items} />\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}