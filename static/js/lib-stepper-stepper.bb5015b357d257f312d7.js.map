{"version":3,"sources":["webpack:///./lib/config.js","webpack:///./lib/stepper/StepperView.js","webpack:///./lib/stepper/index.js","webpack:///./lib/stepper/stepper.mdx"],"names":["__webpack_require__","d","__webpack_exports__","COLORS","react_native_styler__WEBPACK_IMPORTED_MODULE_0__","react_native_component_styler__WEBPACK_IMPORTED_MODULE_1__","primary","secondary","body","action","error","nav","inactive","sheet","navInactiveItem","navActiveItem","SPACING","xs","s","m","l","xl","createTheme","colors","spacing","fontSizes","xxs","xxl","addGlobalContainerVariants","spaceXS","marginBottom","concat","spaceS","spaceM","spaceL","spaceXL","StepperView","props","childrenAsArray","children","map","React","Children","toArray","react_default","a","createElement","ScrollView","horizontal","pagingEnabled","onScrollBeginDrag","handleScrollStart","onScrollEndDrag","handleScrollEnd","showsHorizontalScrollIndicator","scrollEventThrottle","style","contentContainerStyle","ref","attachScrollView","Child","index","View","key","cloneElement","addAnimation","component","handleAddAnimationComponentForIndex","createStyledComponent","BareStepperView","Stepper","_this","_classCallCheck","this","_getPrototypeOf","call","methods","bind","_assertThisInitialized","PureComponent","animationComponents","setState","scrollView","scrollTo","x","Dimensions","get","width","y","animated","eventData","_this2","Object","keys","forEach","hideHalfway","_this3","Platform","OS","nativeEvent","position","Math","round","offset","contentOffset","state","show","_objectSpread","MDXContent","stepper_classCallCheck","stepper_possibleConstructorReturn","stepper_getPrototypeOf","layout","Component","_this$props","components","_objectWithoutProperties","dist","name","id","react_native_styler","parentName"],"mappings":"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","file":"static/js/lib-stepper-stepper.e5fcc8c3.js","sourcesContent":["import { createTheme } from 'react-native-styler';\nimport { addGlobalContainerVariants } from 'react-native-component-styler';\n\nconst COLORS = {\n    primary: '#4e4cc1',\n    secondary: '#953495',\n    body: '#000000',\n    action: '#ffffff',\n    error: '#900505',\n    nav: '#333333',\n    inactive: '#cccccc',\n    sheet: '#fefefe',\n    navInactiveItem: '#cccccc',\n    navActiveItem: '#333333',\n};\nconst SPACING = {\n    xs: 2,\n    s: 4,\n    m: 8,\n    l: 16,\n    xl: 32,\n};\nconst FONT_SIZES = {\n    xxs: '8h4s',\n    xs: '11h4s',\n    s: '13h4s',\n    m: '16h4s',\n    l: '20h4s',\n    xl: '24h4s',\n    xxl: '32h4s'\n};\n\ncreateTheme({\n    colors: COLORS,\n    spacing: SPACING,\n    fontSizes: FONT_SIZES\n});\n\naddGlobalContainerVariants({\n    spaceXS: { marginBottom: `${SPACING.xs}h4s` },\n    spaceS: { marginBottom: `${SPACING.s}h4s` },\n    spaceM: { marginBottom: `${SPACING.m}h4s` },\n    spaceL: { marginBottom: `${SPACING.l}h4s` },\n    spaceXL: { marginBottom: `${SPACING.xl}h4s` },\n});\n\nexport {\n    COLORS,\n    SPACING,\n    FONT_SIZES\n};\n","import React from 'react';\nimport { View, ScrollView } from 'react-native';\n\n/**\n * <StepperView />\n */\nfunction StepperView(props, s) {\n    const childrenAsArray = typeof props.children.map === 'function' ?\n            props.children :\n            React.Children.toArray(props.children);\n\n    return (\n        <ScrollView\n            horizontal\n            pagingEnabled\n            onScrollBeginDrag={props.handleScrollStart}\n            onScrollEndDrag={props.handleScrollEnd}\n            showsHorizontalScrollIndicator={false}\n            scrollEventThrottle={16}\n            style={s('ScrollContent')}\n            contentContainerStyle={s('ScrollContent')}\n            ref={props.attachScrollView}\n        >\n            {childrenAsArray.map((Child, index) => (\n                <View\n                    key={index}\n                    style={s('Item')}\n                >\n                    {React.cloneElement(Child, {\n                        addAnimation: component => props.handleAddAnimationComponentForIndex(index, component)\n                    })}\n                </View>\n            ))}\n        </ScrollView>\n    );\n}\n\nStepperView.propTypes = {};\n\nexport default StepperView;","import { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform, Dimensions } from 'react-native';\nimport { createStyledComponent } from 'react-native-component-styler';\nimport BareStepperView from './StepperView';\nimport style from './style.json';\n\nconst StepperView = createStyledComponent(\n    ['DEFAULT', 'BLEED'],\n    style,\n    BareStepperView\n);\n\n\n/**\n * Stepper\n *  Animation components should be immediate child\n * \n * ```jsx\n * <Stepper></Stepper>\n * ```\n */\nclass Stepper extends PureComponent {\n    constructor() {\n        super();\n\n        this.methods = { \n            attachScrollView: this.attachScrollView.bind(this),\n            handleScrollStart: this.handleScrollStart.bind(this),\n            handleScrollEnd: this.handleScrollEnd.bind(this),\n            handleAddAnimationComponentForIndex: this.handleAddAnimationComponentForIndex.bind(this)\n        };\n    }\n\n    componentWillMount() {\n        this.animationComponents = {};\n        this.setState({ index: 0 });\n    }\n\n    attachScrollView(scrollView) {\n        this.scrollView = scrollView;\n    }\n\n    goToStep(index) {\n        // Todo: test on android\n        if (this.scrollView && typeof this.scrollView.scrollTo === 'function') {\n            this.scrollView.scrollTo({x: index * Dimensions.get('window').width, y: 0, animated: true});\n        }\n    }\n\n    handleAddAnimationComponentForIndex(index, component) {\n        this.animationComponents[index] = component;\n    }\n\n    handleScrollStart(eventData) {\n        Object.keys(this.animationComponents).forEach(key => {\n            if (\n                this.animationComponents[key] &&\n                typeof this.animationComponents[key].hideHalfway === 'function'\n            ) {\n                this.animationComponents[key].hideHalfway();\n            }\n        });\n    }\n\n    handleScrollEnd(eventData) {\n        const { width } = Dimensions.get('window');\n        const index = Platform.OS === 'android' ?\n            eventData.nativeEvent.position + Math.round(eventData.nativeEvent.offset) :\n            Math.round(eventData.nativeEvent.contentOffset.x / width);\n\n        if (index !== this.state.index) {\n            this.setState({ index });\n        }\n\n        Object.keys(this.animationComponents).forEach(key => {\n            if (\n                this.animationComponents[key] &&\n                typeof this.animationComponents[key].show === 'function'\n            ) {\n                this.animationComponents[key].show();\n            }\n        });\n    }\n\n    render() {\n        return StepperView({ ...this.props, ...this.methods });\n    }\n}\n\n\n\nStepper.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired\n};\n\nexport default Stepper;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport { StylerProvider } from 'react-native-styler';\nimport { View } from 'react-native';\nimport '../config';\nimport Stepper from './index';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"stepper\"}}>{`Stepper`}</MDXTag>\n\n<StylerProvider><div /></StylerProvider>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`<Stepper>\n    <View style={{ backgroundColor: 'green' }}></View>\n    <View style={{ backgroundColor: 'red' }}></View>\n    <View style={{ backgroundColor: 'blue' }}></View>\n</Stepper>\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}